plugins {
    id 'java'
}

version = "1.0.0.A1"
group = "org.asf.centuria.launcher"

def authorname = "AerialWorks Software Foundation"

apply plugin: 'eclipse'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

dependencies {
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.0'

	implementation project(":android-launcher-updater")

	implementation ":android:"
	implementation ":constraintlayout:"
}

project.configurations.implementation.canBeResolved = true

task installation () {
	doLast {
		copy {
			into "build/ftlauncher"
		}
		for (ResolvedArtifact arti : project.configurations.implementation.resolvedConfiguration.getResolvedArtifacts()) {
			if (arti.getClassifier() != null)
				continue;
			if (!new File(new File(project.projectDir, "../libs"), arti.name + (arti.getModuleVersion().getId().getVersion() != null && !arti.getModuleVersion().getId().getVersion().isEmpty() ? "-" + arti.getModuleVersion().getId().getVersion() : "") + (arti.getClassifier() != null && !arti.getClassifier().isEmpty() ? "-" + arti.getClassifier() : "") + "." + arti.getExtension()).exists() && !arti.name.equals("android-launcher-updater") && !arti.name.equals("gson")) {
				copy {
					from arti.file
					rename arti.file.getName(), arti.name + (arti.getClassifier() != null && !arti.getClassifier().isEmpty() ? "-" + arti.getClassifier() : "") + "." + arti.getExtension()
					into "build/ftlauncher/libs"
				}
			}
		}
		for (def task : project.tasks) {
			if (task instanceof AbstractArchiveTask) {
				if (!task.getArchiveClassifier().get().isEmpty())
					continue;

				copy {
					from task.getArchiveFile().get()
					rename task.getArchiveFile().get().getAsFile().getName(), task.getArchiveBaseName().get() + (task.getArchiveClassifier().get() != null && !task.getArchiveClassifier().get().isEmpty() ? "-" + task.getArchiveClassifier().get() : "") + "." + task.getArchiveExtension().get()
					into "build/ftlauncher/core"
				}
			}
		}
	}
}

installation.dependsOn project.tasks.build
build.finalizedBy installation
